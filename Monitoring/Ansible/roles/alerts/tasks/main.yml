- name: Créer le dossier de provisioning des alertes Grafana
  file:
    path: /etc/grafana/provisioning/alerting
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Récupérer la liste des sources de données dans Grafana
  uri:
    url: "http://{{ ansible_host }}:3000/api/datasources"
    method: GET
    user: "admin"
    password: "admin"
    force_basic_auth: yes
    return_content: yes
    validate_certs: no
  register: grafana_datasources

- name: Extraire l'UID de la source de données Prometheus
  set_fact:
    prometheus_uid: "{{ item.uid }}"
  loop: "{{ grafana_datasources.json }}"
  when: item.name == 'prometheus'

- name: Vérifier que l'UID de Prometheus a bien été récupéré
  fail:
    msg: "Impossible de récupérer l'UID de Prometheus dans Grafana"
  when: prometheus_uid is not defined

- name: Copier les règles d'alerte YAML avec l'UID dynamique
  template:
    src: grafana_alerts.yml.j2
    dest: /etc/grafana/provisioning/alerting/grafana_alerts.yml
    owner: root
    group: root
    mode: '0644'
  notify: Restart Grafana

# - name: Assurer que le docker Grafana est actif
#   command:
#     cmd: docker ps --format '{{.Names}}' | grep grafana
#   register: grafana_status