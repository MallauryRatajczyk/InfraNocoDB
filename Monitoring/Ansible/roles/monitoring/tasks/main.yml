# Étape 4 :  Préparer les fichiers de monitoring
- name: Créer un répertoire pour les fichiers de monitoring
  file:
    path: /home/{{ ansible_user }}/monitoring
    state: directory
    mode: '0755'
                                                                                                      
- name: Créer le fichier de configuration Prometheus
  template:
    src: prometheus.conf.j2
    dest: /home/{{ ansible_user }}/monitoring/prometheus.yml
    mode: '0644'

- name: Copier le fichier des règles d'alerte pour Prometheus
  copy:
    src: ./files/alert_rules.yml
    dest: /home/{{ ansible_user }}/monitoring/alert_rules.yml
    mode: '0644'

- name: Copier le fichier de configuration d'Alertmanager
  copy:
    src: ./files/alertmanager.yml
    dest: /home/{{ ansible_user }}/monitoring/alertmanager.yml
    mode: '0644'

- name: Copier le fichier de configuration Prometheus
  copy:
    src: docker-compose.j2
    dest: /home/{{ ansible_user }}/monitoring/docker-compose.yml
    mode: '0644'

- name: Démarrer les services avec Docker Compose
  command:
    chdir: /home/{{ ansible_user }}/monitoring
    cmd: docker-compose up -d
  notify: Redémarrer Prometheus et Postgres Exporter

- name: Ajout de la source de données Prometheus
  grafana_datasource:
    name: "prometheus"
    grafana_url: "grafana:3000"
    grafana_user: "admin"
    grafana_password: "admin"
    org_id: 1
    ds_type: prometheus
    ds_url: "prometheus:9090"
    validate_certs: no  # Si vous avez un certificat SSL auto-signé
  changed_when: false

- name: Importer un dashboard node exporter
  grafana_dashboard:
    grafana_url: "grafana:3000"
    grafana_user: "admin"
    grafana_password: "admin"
    dashboard_id: 1860
    dashboard_revision: 37
    state: present
    validate_certs: no